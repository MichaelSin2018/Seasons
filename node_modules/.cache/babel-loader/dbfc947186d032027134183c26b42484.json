{"ast":null,"code":"import _classCallCheck from \"/home/sin/Udemy/Seasons/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/sin/Udemy/Seasons/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/sin/Udemy/Seasons/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/sin/Udemy/Seasons/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/sin/Udemy/Seasons/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/sin/Udemy/Seasons/src/index.js\";\nimport React from 'react';\nimport ReactDom from 'react-dom';\nimport SeasonDisplay from './SeasonDisplay';\nimport Spinner from './Spinner';\n\nvar App =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(App, _React$Component);\n\n  function App() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, App);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(App)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      lat: null,\n      errorMessage: ''\n    };\n    return _this;\n  }\n\n  _createClass(App, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      window.navigator.geolocation.getCurrentPosition(function (position) {\n        return _this2.setState({\n          lat: position.coords.latitude\n        });\n      }, function (err) {\n        return _this2.setState({\n          errorMessage: err.message\n        });\n      });\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate() {\n      console.log('My component was just updated - it rerendered!');\n    }\n  }, {\n    key: \"renderContent\",\n    value: function renderContent() {\n      if (this.state.errorMessage && !this.state.lat) {\n        return React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 28\n          },\n          __self: this\n        }, \"Error: \", this.state.errorMessage);\n      }\n\n      ;\n\n      if (!this.state.errorMessage && this.state.lat) {\n        return React.createElement(SeasonDisplay, {\n          lat: this.state.lat,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 32\n          },\n          __self: this\n        });\n      }\n\n      ;\n      return React.createElement(Spinner, {\n        message: \"Pleae accept location request\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 35\n        },\n        __self: this\n      });\n    } //React says we have to define render!!\n\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        className: \"border red\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 41\n        },\n        __self: this\n      }, this.renderContent());\n    }\n  }]);\n\n  return App;\n}(React.Component);\n\nReactDom.render(React.createElement(App, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 49\n  },\n  __self: this\n}), document.querySelector('#root'));","map":{"version":3,"sources":["/home/sin/Udemy/Seasons/src/index.js"],"names":["React","ReactDom","SeasonDisplay","Spinner","App","state","lat","errorMessage","window","navigator","geolocation","getCurrentPosition","position","setState","coords","latitude","err","message","console","log","renderContent","Component","render","document","querySelector"],"mappings":";;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,WAArB;AACA,OAAOC,aAAP,MAA0B,iBAA1B;AACA,OAAOC,OAAP,MAAoB,WAApB;;IAGMC,G;;;;;;;;;;;;;;;;;UAMJC,K,GAAQ;AAAEC,MAAAA,GAAG,EAAC,IAAN;AAAYC,MAAAA,YAAY,EAAE;AAA1B,K;;;;;;wCAEY;AAAA;;AAClBC,MAAAA,MAAM,CAACC,SAAP,CAAiBC,WAAjB,CAA6BC,kBAA7B,CACI,UAAAC,QAAQ;AAAA,eAAI,MAAI,CAACC,QAAL,CAAc;AAAEP,UAAAA,GAAG,EAAEM,QAAQ,CAACE,MAAT,CAAgBC;AAAvB,SAAd,CAAJ;AAAA,OADZ,EAEI,UAAAC,GAAG;AAAA,eAAI,MAAI,CAACH,QAAL,CAAc;AAAEN,UAAAA,YAAY,EAAES,GAAG,CAACC;AAApB,SAAd,CAAJ;AAAA,OAFP;AAID;;;yCAEoB;AACnBC,MAAAA,OAAO,CAACC,GAAR,CAAY,gDAAZ;AACD;;;oCAEe;AACd,UAAI,KAAKd,KAAL,CAAWE,YAAX,IAA2B,CAAC,KAAKF,KAAL,CAAWC,GAA3C,EAAgD;AAC5C,eAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAAa,KAAKD,KAAL,CAAWE,YAAxB,CAAP;AACH;;AAAA;;AAED,UAAI,CAAC,KAAKF,KAAL,CAAWE,YAAZ,IAA4B,KAAKF,KAAL,CAAWC,GAA3C,EAAgD;AAC5C,eAAO,oBAAC,aAAD;AAAe,UAAA,GAAG,EAAE,KAAKD,KAAL,CAAWC,GAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;AACH;;AAAA;AAED,aAAO,oBAAC,OAAD;AAAS,QAAA,OAAO,EAAC,+BAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAP;AACD,K,CAED;;;;6BACS;AACP,aACI;AAAK,QAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACG,KAAKc,aAAL,EADH,CADJ;AAKD;;;;EAtCepB,KAAK,CAACqB,S;;AAyCxBpB,QAAQ,CAACqB,MAAT,CACI,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EADJ,EACaC,QAAQ,CAACC,aAAT,CAAuB,OAAvB,CADb","sourcesContent":["import React from 'react';\nimport ReactDom from 'react-dom';\nimport SeasonDisplay from './SeasonDisplay';\nimport Spinner from './Spinner';\n\n\nclass App extends React.Component {\n//   constructor(props) {\n//     super(props);\n//     this.state = { lat: null, errorMessage: '' };\n//   }\n  \n  state = { lat:null, errorMessage: ''};\n  \n  componentDidMount() {\n    window.navigator.geolocation.getCurrentPosition(\n        position => this.setState({ lat: position.coords.latitude }),\n        err => this.setState({ errorMessage: err.message })\n    )  \n  }\n  \n  componentDidUpdate() {\n    console.log('My component was just updated - it rerendered!');\n  }\n\n  renderContent() {\n    if (this.state.errorMessage && !this.state.lat) {\n        return <div>Error: {this.state.errorMessage}</div>\n    };\n\n    if (!this.state.errorMessage && this.state.lat) {\n        return <SeasonDisplay lat={this.state.lat} />\n    };\n\n    return <Spinner message=\"Pleae accept location request\"/>;\n  }\n    \n  //React says we have to define render!!\n  render() {\n    return (\n        <div className=\"border red\">\n          {this.renderContent()}\n        </div>\n    )\n  }\n} \n\nReactDom.render(\n    <App />, document.querySelector('#root')\n);"]},"metadata":{},"sourceType":"module"}